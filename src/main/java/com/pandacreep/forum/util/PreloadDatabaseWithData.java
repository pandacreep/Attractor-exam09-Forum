package com.pandacreep.forum.util;

import com.pandacreep.forum.model.post.Post;
import com.pandacreep.forum.model.post.PostRepository;
import com.pandacreep.forum.model.topic.Topic;
import com.pandacreep.forum.model.topic.TopicRepository;
import com.pandacreep.forum.model.user.User;
import com.pandacreep.forum.model.user.UserRepository;
import lombok.AllArgsConstructor;
import org.springframework.boot.CommandLineRunner;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.crypto.password.PasswordEncoder;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import java.util.stream.Stream;

@Configuration
@AllArgsConstructor
public class PreloadDatabaseWithData {
    UserRepository userRepository;
    TopicRepository topicRepository;
    PostRepository postRepository;
    PasswordEncoder encoder;

    @Bean
    CommandLineRunner initDatabase() {
        System.out.println("Initialization of MongoDB with initial data");
        userRepository.deleteAll();
        topicRepository.deleteAll();
        postRepository.deleteAll();
        try {
            initUses().run();
            initTopics().run();
            initPosts().run();
        } catch (Exception e) {
            e.printStackTrace();
        }
        return null;
    }

    private CommandLineRunner initUses() {
        return (args) -> Stream.of(users())
                .peek(System.out::println)
                .forEach(userRepository::save);
    }

    private User[] users() {
        return new User[]{
                new User(UUID.randomUUID().toString(),
                        "anna@gmail.com", "Anna",
                        encoder.encode("123"),
                        "",
                        0, new ArrayList<>()),
                new User(UUID.randomUUID().toString(),
                        "oleg@gmail.com", "Oleg",
                        encoder.encode("123"),
                        "",
                        0, new ArrayList<>()),
                new User(UUID.randomUUID().toString(),
                        "mike@gmail.com", "Mike",
                        encoder.encode("123"),
                        "",
                        0, new ArrayList<>())
        };
    }

    private CommandLineRunner initTopics() {
        return (args) -> Stream.of(topics())
                .peek(System.out::println)
                .forEach(topicRepository::save);
    }

    private Topic[] topics() {
        return new Topic[]{
                Topic.builder()
                        .id(UUID.randomUUID().toString())
                        .name("Travel")
                        .description("Here we discuss travel to other countries")
                        .date(LocalDate.now().minusDays(15))
                        .user(userRepository.findByEmail("anna@gmail.com").get())
                        .posts(new ArrayList<>())
                        .build(),
                Topic.builder()
                        .id(UUID.randomUUID().toString())
                        .name("Cars")
                        .description("Here we discuss different cars")
                        .date(LocalDate.now().minusDays(10))
                        .user(userRepository.findByEmail("oleg@gmail.com").get())
                        .posts(new ArrayList<>())
                        .build(),
                Topic.builder()
                        .id(UUID.randomUUID().toString())
                        .name("Films")
                        .description("Here we discuss films and actors")
                        .date(LocalDate.now().minusDays(25))
                        .user(userRepository.findByEmail("mike@gmail.com").get())
                        .posts(new ArrayList<>())
                        .build()
        };
    }

    private CommandLineRunner initPosts() {
        return (args) -> {
            Post[] posts = posts();
            for (int i = 0; i < posts.length; i++) {
                postRepository.save(posts[i]);
                System.out.println(posts[i]);

                var userEmail = posts[i].getUser().getEmail();
                var user = userRepository.findByEmail(userEmail).get();
                user.setCountPosts(user.getCountPosts() + 1);
                userRepository.save(user);

                var topicId = posts[i].getTopic().getId();
                var topic = topicRepository.findById(topicId).get();
                List<Post> topicPosts = topic.getPosts();
                topicPosts.add(posts[i]);
                topic.setPosts(topicPosts);
                topicRepository.save(topic);
            }
        };
    }

    private Post[] posts() {
        return new Post[]{
                Post.builder()
                        .id(UUID.randomUUID().toString())
                        .text("I love travelling")
                        .dateTime(LocalDateTime.now().minusDays(3))
                        .user(userRepository.findByEmail("anna@gmail.com").get())
                        .topic(topicRepository.findByName("Travel"))
                        .build(),
                Post.builder()
                        .id(UUID.randomUUID().toString())
                        .text("I also love travelling")
                        .dateTime(LocalDateTime.now().minusDays(1))
                        .user(userRepository.findByEmail("oleg@gmail.com").get())
                        .topic(topicRepository.findByName("Travel"))
                        .build(),
                Post.builder()
                        .id(UUID.randomUUID().toString())
                        .text("I dont like travelling")
                        .dateTime(LocalDateTime.now().minusDays(2))
                        .user(userRepository.findByEmail("mike@gmail.com").get())
                        .topic(topicRepository.findByName("Travel"))
                        .build(),
                Post.builder()
                        .id(UUID.randomUUID().toString())
                        .text("I drive red Mustang")
                        .dateTime(LocalDateTime.now().minusDays(2))
                        .user(userRepository.findByEmail("mike@gmail.com").get())
                        .topic(topicRepository.findByName("Cars"))
                        .build(),
                Post.builder()
                        .id(UUID.randomUUID().toString())
                        .text("My favorite film is")
                        .dateTime(LocalDateTime.now().minusDays(2))
                        .user(userRepository.findByEmail("oleg@gmail.com").get())
                        .topic(topicRepository.findByName("Films"))
                        .build()
        };
    }
}
